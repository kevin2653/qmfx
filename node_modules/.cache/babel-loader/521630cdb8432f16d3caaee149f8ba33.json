{"remainingRequest":"E:\\HtmlProjects\\qmfx\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\qmfx\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\qmfx\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\qmfx\\src\\components\\prodtype\\prodtypeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\qmfx\\src\\components\\prodtype\\prodtypeInfo.vue","mtime":1578497306167},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577370171724},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577370171724},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addProdTypeAPI, PutProdTypeAPI, getProdTypeDetailAPI } from '@/api/inventoryRecordAPI.js';\nexport default {\n  name: 'editor',\n  data: function data() {\n    return {\n      // 规格列表\n      level: '1',\n      typeSearch: [],\n      pgIdList: [],\n      onetypeidlist: [],\n      dataForm: {\n        title: '',\n        remark: ''\n      },\n      imageShowUrl: '' // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n\n    };\n  },\n  components: {},\n  props: {\n    prodtypeId: {\n      required: true\n    }\n  },\n  methods: {\n    dataFormSubmit: function dataFormSubmit() {\n      var _this = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        var args = {\n          title: _this.dataForm.title,\n          remark: _this.dataForm.remark\n        }; // console.log(this.prodchangeType)\n\n        if (_this.prodtypeId == 0) {\n          addProdTypeAPI(args).then(function (res) {\n            var data = res.data;\n\n            if (data.code === 200) {\n              _this.$message({\n                type: 'success',\n                message: '添加分类成功'\n              });\n\n              _this.backhtmls();\n\n              _this.$emit('finish-action');\n            } else {\n              _this.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {});\n        } else {\n          args.tid = _this.dataForm.tid;\n          PutProdTypeAPI(args).then(function (res) {\n            var data = res.data;\n\n            if (data.code === 200) {\n              _this.$message({\n                type: 'success',\n                message: '修改分类成功'\n              });\n\n              _this.backhtmls();\n\n              _this.$emit('finish-action');\n            } else {\n              _this.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {});\n        }\n      });\n    },\n    getProdTypeDetail: function getProdTypeDetail(id) {\n      var _this2 = this;\n\n      console.log(\"getProdTypeDetail\");\n      var params = id;\n      getProdTypeDetailAPI(params).then(function (res) {\n        console.log(\"getProdTypeDetailAPI data\");\n        var prodtypeform = res.data.data;\n        _this2.dataForm = prodtypeform;\n        console.log(_this2.dataForm);\n      }).catch(function (err) {//this.tableLoading = false;\n      });\n    },\n\n    /*\n      * 返回上层\n      */\n    backhtmls: function backhtmls() {\n      this.$emit('close-form');\n    }\n  },\n  mounted: function mounted() {\n    console.log(this.prodtypeId);\n\n    if (this.prodtypeId > 0) {\n      this.getProdTypeDetail(this.prodtypeId);\n    }\n  }\n};",{"version":3,"sources":["prodtypeInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SACA,cADA,EAEA,cAFA,EAGA,oBAHA,QAIA,6BAJA;AAKA,eAAA;AACA,QAAA,QADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA;AACA,aAAA,GAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,EAJA;AAKA,qBAAA,EALA;AAMA,gBAAA;AACA,eAAA,EADA;AAEA,gBAAA;AAFA,OANA;AAUA,oBAAA,EAVA,CAWA;;AAXA,KAAA;AAaA,GAhBA;AAiBA,cAAA,EAjBA;AAoBA,SAAA;AACA,gBAAA;AACA,gBAAA;AADA;AADA,GApBA;AA2BA,WAAA;AAEA,kBAFA,4BAEA;AAAA;;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,OAAA;AACA,iBAAA,MAAA,QAAA,CAAA,KADA;AAEA,kBAAA,MAAA,QAAA,CAAA;AAFA,SAAA,CADA,CAKA;;AACA,YAAA,MAAA,UAAA,IAAA,CAAA,EAAA;AACA,yBAAA,IAAA,EACA,IADA,CACA,eAAA;AACA,gBAAA,OAAA,IAAA,IAAA;;AACA,gBAAA,KAAA,IAAA,KAAA,GAAA,EAAA;AACA,oBAAA,QAAA,CAAA;AACA,sBAAA,SADA;AAEA,yBAAA;AAFA,eAAA;;AAIA,oBAAA,SAAA;;AACA,oBAAA,KAAA,CAAA,eAAA;AACA,aAPA,MAOA;AACA,oBAAA,QAAA,CAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA;AACA;AACA,WAbA,EAcA,KAdA,CAcA,eAAA,CACA,CAfA;AAgBA,SAjBA,MAiBA;AACA,eAAA,GAAA,GAAA,MAAA,QAAA,CAAA,GAAA;AACA,yBAAA,IAAA,EACA,IADA,CACA,eAAA;AACA,gBAAA,OAAA,IAAA,IAAA;;AACA,gBAAA,KAAA,IAAA,KAAA,GAAA,EAAA;AACA,oBAAA,QAAA,CAAA;AACA,sBAAA,SADA;AAEA,yBAAA;AAFA,eAAA;;AAIA,oBAAA,SAAA;;AACA,oBAAA,KAAA,CAAA,eAAA;AACA,aAPA,MAOA;AACA,oBAAA,QAAA,CAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA;AACA;AACA,WAbA,EAcA,KAdA,CAcA,eAAA,CACA,CAfA;AAgBA;AACA,OA1CA;AA2CA,KA9CA;AAgDA,qBAhDA,6BAgDA,EAhDA,EAgDA;AAAA;;AACA,cAAA,GAAA,CAAA,mBAAA;AACA,UAAA,SAAA,EAAA;AACA,2BAAA,MAAA,EACA,IADA,CACA,eAAA;AACA,gBAAA,GAAA,CAAA,2BAAA;AACA,YAAA,eAAA,IAAA,IAAA,CAAA,IAAA;AACA,eAAA,QAAA,GAAA,YAAA;AACA,gBAAA,GAAA,CAAA,OAAA,QAAA;AACA,OANA,EAOA,KAPA,CAOA,eAAA,CACA;AACA,OATA;AAUA,KA7DA;;AA+DA;;;AAGA,aAlEA,uBAkEA;AACA,WAAA,KAAA,CAAA,YAAA;AACA;AApEA,GA3BA;AAiGA,SAjGA,qBAiGA;AACA,YAAA,GAAA,CAAA,KAAA,UAAA;;AACA,QAAA,KAAA,UAAA,GAAA,CAAA,EAAA;AACA,WAAA,iBAAA,CAAA,KAAA,UAAA;AACA;AACA;AAtGA,CAAA","sourcesContent":["<template>\n  <div class=\"mod-prod-info\">\n    <el-form :model=\"dataForm\"\n             ref=\"dataForm\"\n             label-width=\"150px\">\n      <el-form-item  label=\"分类名称:\"\n                    prop=\"title\"\n                    :rules=\"[{ required: true, message: '分类名称不能为空'}]\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"dataForm.title\"\n                    placeholder=\"请输入\"\n                    maxlength=\"50\"></el-input>\n        </el-col>\n      </el-form-item>    \n      <el-form-item label=\"描述:\"\n                    prop=\"remark\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"dataForm.remark\"\n                    placeholder=\"请输入\"\n                    maxlength=\"50\"></el-input>\n        </el-col>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\"\n                   @click=\"dataFormSubmit()\">确定</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {\n    addProdTypeAPI,\n    PutProdTypeAPI,\n    getProdTypeDetailAPI \n} from '@/api/inventoryRecordAPI.js'\nexport default {\n   name:'editor',\n  data () {\n    return {\n      // 规格列表\n      level:'1',\n      typeSearch:[],\n      pgIdList:[],\n      onetypeidlist:[],\n      dataForm:{\n        title:'',\n        remark:''\n      },\n      imageShowUrl:''\n      // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n    }\n  },\n  components: {\n\n  },\n  props: {\n    prodtypeId: {\n      required: true,\n    }\n  },\n  \n  \n  methods: {\n   \n    dataFormSubmit () {\n        this.$refs['dataForm'].validate((valid) => {\n                    const args = {\n                        title:this.dataForm.title,\n                        remark:this.dataForm.remark,\n                    };\n                    // console.log(this.prodchangeType)\n                    if(this.prodtypeId==0){\n                      addProdTypeAPI(args)\n                        .then(res => {\n                            const data = res.data;\n                            if (data.code === 200) {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '添加分类成功',\n                                    });\n                                this.backhtmls()\n                                    this.$emit('finish-action')\n                            }else{\n                                this.$message.error(res.data.msg)\n                            }\n                        })\n                        .catch(err => {\n                        });\n                    }else{\n                      args.tid=this.dataForm.tid\n                      PutProdTypeAPI(args)\n                        .then(res => {\n                            const data = res.data;\n                            if (data.code === 200) {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '修改分类成功',\n                                    });\n                                this.backhtmls()\n                                    this.$emit('finish-action')\n                            }else{\n                                this.$message.error(res.data.msg)\n                            }\n                        })\n                        .catch(err => {\n                        });\n                    }\n        })\n    },\n  \n    getProdTypeDetail(id){\n      console.log(\"getProdTypeDetail\");\n      const params =id\n            getProdTypeDetailAPI(params)\n                .then(res => {\n                  console.log(\"getProdTypeDetailAPI data\");\n                    let prodtypeform= res.data.data\n                    this.dataForm=prodtypeform\n                    console.log(this.dataForm);\n                })\n                .catch(err => {\n                    //this.tableLoading = false;\n                })\n    },\n   \n    /*\n      * 返回上层\n      */\n    backhtmls(){\n        this.$emit('close-form')\n    }    \n  },\n  mounted() {\n      console.log(this.prodtypeId)\n      if(this.prodtypeId>0){\n         this.getProdTypeDetail(this.prodtypeId)\n      }\n  },\n}\n</script>\n<style scoped=\"scoped\" lang=\"less\">\n.mbline{\n  margin-top:24px;\n  padding-left: 20px;\n  line-height: 40px;\n  background: rgb(249, 249, 249);\n}\n</style>"],"sourceRoot":"src\\components\\prodtype"}]}