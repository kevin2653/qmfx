{"remainingRequest":"E:\\HtmlProjects\\qmfx\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\qmfx\\src\\components\\question\\questionTypeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\qmfx\\src\\components\\question\\questionTypeInfo.vue","mtime":1578500982399},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577370171724},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577370171724},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n    saveQuestionTypeAPI,\r\n    updateQuestionTypeAPI,\r\n    getQuestionTypeDetailAPI \r\n} from '@/api/questionAPI.js'\r\nexport default {\r\n   name:'editor',\r\n  data () {\r\n    return {\r\n      // 规格列表\r\n     \r\n      dataForm:{\r\n        name:'',\r\n        sort:0\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n  props: {\r\n    updateId: {\r\n      required: true,\r\n    }\r\n  },\r\n  \r\n  \r\n  methods: {\r\n   \r\n    dataFormSubmit () {\r\n        this.$refs['dataForm'].validate((valid) => {\r\n                    const args = {\r\n                        name:this.dataForm.name,\r\n                        sort:this.dataForm.sort,\r\n                    };\r\n                    // console.log(this.prodchangeType)\r\n                    if(this.updateId==0){\r\n                      saveQuestionTypeAPI(args)\r\n                        .then(res => {\r\n                            const data = res.data;\r\n                            if (data.code === 200) {\r\n                                    this.$message({\r\n                                        type: 'success',\r\n                                        message: '添加分类成功',\r\n                                    });\r\n                                this.backhtmls()\r\n                                    this.$emit('finish-action')\r\n                            }else{\r\n                                this.$message.error(res.data.msg)\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                        });\r\n                    }else{\r\n                      args.id=this.updateId\r\n                      updateQuestionTypeAPI(args)\r\n                        .then(res => {\r\n                            const data = res.data;\r\n                            if (data.code === 200) {\r\n                                    this.$message({\r\n                                        type: 'success',\r\n                                        message: '修改分类成功',\r\n                                    });\r\n                                this.backhtmls()\r\n                                    this.$emit('finish-action')\r\n                            }else{\r\n                                this.$message.error(res.data.msg)\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                        });\r\n                    }\r\n        })\r\n    },\r\n  \r\n    getProdTypeDetail(id){\r\n      console.log(\"getProdTypeDetail\");\r\n      const params =id\r\n            getQuestionTypeDetailAPI(params)\r\n                .then(res => {\r\n                  console.log(\"getProdTypeDetailAPI data\");\r\n                    let prodtypeform= res.data.data\r\n                    this.dataForm=prodtypeform\r\n                    console.log(this.dataForm);\r\n                })\r\n                .catch(err => {\r\n                    //this.tableLoading = false;\r\n                })\r\n    },\r\n   \r\n    /*\r\n      * 返回上层\r\n      */\r\n    backhtmls(){\r\n        this.$emit('close-form')\r\n    }    \r\n  },\r\n  mounted() {\r\n      console.log(this.updateId)\r\n      if(this.updateId>0){\r\n         this.getProdTypeDetail(this.updateId)\r\n      }\r\n  },\r\n}\r\n",{"version":3,"sources":["questionTypeInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"questionTypeInfo.vue","sourceRoot":"src\\components\\question","sourcesContent":["<template>\r\n  <div class=\"mod-prod-info\">\r\n    <el-form :model=\"dataForm\"\r\n             ref=\"dataForm\"\r\n             label-width=\"150px\">\r\n      <el-form-item  label=\"分类名称:\"\r\n                    prop=\"name\"\r\n                    >\r\n        <el-col :span=\"8\">\r\n          <el-input v-model=\"dataForm.name\"\r\n                    placeholder=\"请输入\"\r\n                    maxlength=\"50\"></el-input>\r\n        </el-col>\r\n      </el-form-item>    \r\n      <el-form-item label=\"排序:\"\r\n                    prop=\"sort\">\r\n        <el-col :span=\"8\">\r\n          <el-input v-model=\"dataForm.sort\"\r\n                    placeholder=\"请输入\"\r\n                    maxlength=\"50\"></el-input>\r\n        </el-col>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\"\r\n                   @click=\"dataFormSubmit()\">确定</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    saveQuestionTypeAPI,\r\n    updateQuestionTypeAPI,\r\n    getQuestionTypeDetailAPI \r\n} from '@/api/questionAPI.js'\r\nexport default {\r\n   name:'editor',\r\n  data () {\r\n    return {\r\n      // 规格列表\r\n     \r\n      dataForm:{\r\n        name:'',\r\n        sort:0\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n  props: {\r\n    updateId: {\r\n      required: true,\r\n    }\r\n  },\r\n  \r\n  \r\n  methods: {\r\n   \r\n    dataFormSubmit () {\r\n        this.$refs['dataForm'].validate((valid) => {\r\n                    const args = {\r\n                        name:this.dataForm.name,\r\n                        sort:this.dataForm.sort,\r\n                    };\r\n                    // console.log(this.prodchangeType)\r\n                    if(this.updateId==0){\r\n                      saveQuestionTypeAPI(args)\r\n                        .then(res => {\r\n                            const data = res.data;\r\n                            if (data.code === 200) {\r\n                                    this.$message({\r\n                                        type: 'success',\r\n                                        message: '添加分类成功',\r\n                                    });\r\n                                this.backhtmls()\r\n                                    this.$emit('finish-action')\r\n                            }else{\r\n                                this.$message.error(res.data.msg)\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                        });\r\n                    }else{\r\n                      args.id=this.updateId\r\n                      updateQuestionTypeAPI(args)\r\n                        .then(res => {\r\n                            const data = res.data;\r\n                            if (data.code === 200) {\r\n                                    this.$message({\r\n                                        type: 'success',\r\n                                        message: '修改分类成功',\r\n                                    });\r\n                                this.backhtmls()\r\n                                    this.$emit('finish-action')\r\n                            }else{\r\n                                this.$message.error(res.data.msg)\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                        });\r\n                    }\r\n        })\r\n    },\r\n  \r\n    getProdTypeDetail(id){\r\n      console.log(\"getProdTypeDetail\");\r\n      const params =id\r\n            getQuestionTypeDetailAPI(params)\r\n                .then(res => {\r\n                  console.log(\"getProdTypeDetailAPI data\");\r\n                    let prodtypeform= res.data.data\r\n                    this.dataForm=prodtypeform\r\n                    console.log(this.dataForm);\r\n                })\r\n                .catch(err => {\r\n                    //this.tableLoading = false;\r\n                })\r\n    },\r\n   \r\n    /*\r\n      * 返回上层\r\n      */\r\n    backhtmls(){\r\n        this.$emit('close-form')\r\n    }    \r\n  },\r\n  mounted() {\r\n      console.log(this.updateId)\r\n      if(this.updateId>0){\r\n         this.getProdTypeDetail(this.updateId)\r\n      }\r\n  },\r\n}\r\n</script>\r\n<style scoped=\"scoped\" lang=\"less\">\r\n.mbline{\r\n  margin-top:24px;\r\n  padding-left: 20px;\r\n  line-height: 40px;\r\n  background: rgb(249, 249, 249);\r\n}\r\n</style>"]}]}