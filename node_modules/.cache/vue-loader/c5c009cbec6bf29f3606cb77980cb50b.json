{"remainingRequest":"E:\\HtmlProjects\\qmfx\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\qmfx\\src\\components\\prod\\prodList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\qmfx\\src\\components\\prod\\prodList.vue","mtime":1578498934670},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577370171724},{"path":"E:\\HtmlProjects\\qmfx\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst SecondIndex = () => import('./prodInfo.vue');\nimport {\n     getProductsDepListAPI,\n     putProdShopAPI,\n     deleteFirstDepAPI,\n     getprodTypeListtAPI\n} from '@/api/productApi.js'\nimport {\n     timeStamp2String\n} from '@/api/globalAPI.js'\n\nexport default {\n    name:'prodList',\n    data(){\n        return{\n            form:{\n                current :1,\n                size :10,\n                typeId:\"\",\n                search:''\n                // productType: 0,\n                // statusType:1,\n                // sortType:1\n            },\n            prodtypelist:[],\n            freightlist:[],\n            value1:[, ],\n            shoptype:1,\n            shopClassification:'',\n            ommodityType:'',\n            searchshow:false,\n            keyword:\"\",\n            tableData:[],\n            totalCount:0,\n            tableLoading:false,\n            modalAddDepShow:false,//新增科室弹窗\n            isEdit:false,//是否编辑\n            depId:0,//科室ID\n            secondDepShow:false,//产品1弹窗\n        };\n    },\n    components:{\n        // AddDepModal,\n        SecondIndex\n    },\n    methods:{\n        /*\n         * 获取产品列表\n         */\n        getProdList(){\n            const params = {...this.form};\n            this.tableLoading = true;\n             getProductsDepListAPI(params)\n                .then(res => {\n                    console.log(\"getProductsDepListAPI res:\");\n                    console.log(res.data.data);\n                    const data = res.data.data;\n                    if(data!=null){\n                        this.totalCount = data.total;\n                        this.tableData = data.records;\n                        this.tableLoading = false;\n                        let nowprodnum =data.count;\n                    }else{\n                        this.tableData=[]\n                        this.tableLoading = false;\n                        this.totalCount = 0;\n                    }\n                })\n                .catch(err => {\n                    this.errorMsg(err)\n                    this.tableLoading = false;\n                })\n        },\n        changesearchtype(id){\n            this.form.statusType=id\n            this.getProdList()\n        },\n        changetable(e){\n            if(e.prop=='price'&&e.order=='ascending'){\n                this.form.sortType=1\n            }else if(e.prop=='price'&&e.order=='descending'){\n                this.form.sortType=2\n            }\n            this.getProdList()\n        },\n        /**\n         * @msg: 翻页\n         * @param {type} \n         * @return: \n         */\n        handleSizeChange(cSize) {\n            this.form.size = cSize;\n            this.getProdList();\n        },\n        geprodTypelist(){\n            const getTempParam = {\n                current:1,\n                size:100\n            };\n            getprodTypeListtAPI(getTempParam)\n                .then(res => {\n                    const response = res.data.data;\n                    response.unshift({\n                        tid:'',\n                        title:\"全部\"\n                    })\n                    this.prodtypelist =response\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n        },\n        handleCurrentChange(currentPage) {\n            this.form.current = currentPage;\n            this.getProdList();\n        },\n        /**\n         * @msg: 新增产品\n         * @param {type} \n         * @return: \n         */\n        handleAddDep(){\n            this.depId = 0;\n            this.isEdit = false;\n            this.secondDepShow = true;\n        },\n        /**\n         * @msg: 修改产品\n         * @param {Number} row  修改产品的信息\n         */\n        handleCheck(index, row) {\n            this.depId = row.pid;\n            this.secondDepShow = true;\n            this.isEdit = true;\n        },\n        /**\n         * @msg: 删除产品\n         * @param {Number} row  删除产品信息\n         */\n        handleDel(index, row){\n            let delID = ''+row.pid\n            const params={\n                pids:delID\n            }\n            deleteFirstDepAPI(params)\n                .then(res => {\n                    const response = res.data;\n                    let status = 'success';\n                    if (response.code === 200) {\n                        this.getProdList();\n                    } else {\n                        status = 'error';\n                    }\n                    this.$message({\n                        type: status,\n                        message: status === 'success' ? '删除成功！' : response.message,\n                    })\n                })\n        },\n        handleputAway(index, row){\n            let putid = row.pid\n            let putstatus =0\n            if(row.status==0){\n                putstatus=-1\n            }\n            const params={\n                pid:putid,\n                status:putstatus\n            }\n            putProdShopAPI(params)\n                .then(res => {\n                    const response = res.data;\n                    let status = 'success';                    \n                    if (response.code === 200) {\n                        this.getProdList();\n                    } else {\n                        status = 'error';\n                    }\n                    this.$message({\n                        type: status,\n                        message: status === 'success' ? '操作成功！' : response.message,\n                    })\n                })\n        },\n        handleSecondDepShow(){\n            this.secondDepShow = true;\n            this.depId=0\n            this.isEdit=false\n        },\n        errorMsg (message) {\n            this.$message({\n                message: message,\n                type: 'error',\n                duration: 1500\n            })\n        },\n    },\n    created(){\n        this.geprodTypelist()\n        this.getProdList()\n    }\n}\n",null]}